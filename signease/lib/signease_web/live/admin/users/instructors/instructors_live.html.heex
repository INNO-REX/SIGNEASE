<.loader id="instructors-loader" />

<div class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
  <!-- Top Navigation Bar -->
  <.live_component module={SigneaseWeb.Admin.Components.TopNavComponent} id="top-nav" current_user={@current_user} />

  <div class="flex h-screen">
    <!-- Side Navigation -->
    <.live_component module={SigneaseWeb.Admin.Components.SideNavComponent} id="side-nav" current_page="instructors" stats={@stats} current_user={@current_user} />
    
    <!-- Main Content -->
    <div class="flex-1 overflow-auto">
      <div class="p-6 lg:p-8">
        <!-- Header Component -->
        <.live_component
          module={SigneaseWeb.Components.SimpleHeaderComponent}
          id="header-section"
          title={@title}
          description={@description}
          message={nil}
          actions={true}
          stats={@stats}
        />

        <!-- Statistics Cards -->
        <div class="mb-8">
          <.live_component module={SigneaseWeb.Admin.Components.StatsCardsComponent} id="instructors-stats-cards" stats={@stats} />
        </div>

        <!-- Main Content Panel -->
        <div id="panel-1" class="bg-white shadow-md rounded-lg text-xs">
          <div class="p-6">
            <div class="grid md:flex justify-between items-center">
              <.live_component
                module={SigneaseWeb.Admin.Users.Components.ISearchComponent} 
                id="ISearchComponent"
                params={@params}
              />
              <div class="flex space-x-4">
                <div x-data="{ open: false }" class="relative">
                  <button
                    @click="open = !open"
                    @click.away="open = false"
                    class="inline-flex items-center px-3 py-1.5 bg-gradient-to-r from-blue-600 to-blue-700 text-white text-xs font-medium rounded-md hover:from-blue-700 hover:to-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-all duration-200 shadow-sm"
                  >
                    <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                    Export
                  </button>
                  
                  <div
                    x-show="open"
                    x-transition:enter="transition ease-out duration-100"
                    x-transition:enter-start="transform opacity-0 scale-95"
                    x-transition:enter-end="transform opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-75"
                    x-transition:leave-start="transform opacity-100 scale-100"
                    x-transition:leave-end="transform opacity-0 scale-95"
                    class="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50"
                    style="display: none;"
                  >
                    <div class="py-1">
                      <button
                        phx-click="export_pdf"
                        class="flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                      >
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                        </svg>
                        Export as PDF
                      </button>
                      
                      <button
                        phx-click="export_excel"
                        class="flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                      >
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        Export as Excel
                      </button>
                      
                      <button
                        phx-click="export_csv"
                        class="flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                      >
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        Export as CSV
                      </button>
                    </div>
                  </div>
                </div>
                
                <button
                  class="inline-flex items-center px-3 py-1.5 bg-gradient-to-r from-blue-600 to-blue-700 text-white text-xs font-medium rounded-md hover:from-blue-700 hover:to-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-all duration-200 shadow-sm"
                  phx-click="open_filter"
                >
                  <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
                  </svg>
                  Filter
                </button>

                <button
                  class="inline-flex items-center px-3 py-1.5 bg-gradient-to-r from-blue-600 to-blue-700 text-white text-xs font-medium rounded-md hover:from-blue-700 hover:to-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-all duration-200 shadow-sm"
                  phx-click="reload"
                >
                  <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                  </svg>
                  Reload
                </button>
              </div>
            </div>
            
            <div class="mt-6 my-overflow-div">
              <input type="hidden" name="_csrf_token" id="csrf" value={Plug.CSRFProtection.get_csrf_token()} />
              
              <!-- Enhanced Table Container -->
              <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
                <.table id="tbl_instructors" rows={@data} class="min-w-full">
                  <:col :let={instructor} label="First Name" class="w-20">
                    <div class="font-medium text-gray-900 text-xs px-2 py-1.5 pl-4">
                      <%= instructor.first_name %>
                    </div>
                  </:col>
                  <:col :let={instructor} label="Last Name" class="w-20">
                    <div class="font-medium text-gray-900 text-xs px-2 py-1.5">
                      <%= instructor.last_name %>
                    </div>
                  </:col>
                  <:col :let={instructor} label="Email" class="w-40">
                    <div class="text-xs text-gray-600 px-2 py-1.5 truncate">
                      <%= instructor.email %>
                    </div>
                  </:col>
                  <:col :let={instructor} label="Phone" class="w-28">
                    <div class="text-xs text-gray-600 px-2 py-1.5">
                      <%= instructor.phone || "N/A" %>
                    </div>
                  </:col>
                  <:col :let={instructor} label="Type" class="w-16">
                    <div class="text-xs text-gray-600 px-2 py-1.5">
                      Instructor
                    </div>
                  </:col>
                  <:col :let={instructor} label="Status" class="w-16"> 
                    <div class="px-2 py-1.5">
                      <span class={[
                        "inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium",
                        get_status_class(instructor.status)
                      ]}>
                        <%= format_user_status(instructor.status) %>
                      </span>  
                    </div>
                  </:col>
                  
                  <:col :let={instructor} label="Hearing Status" class="w-20"> 
                    <div class="px-2 py-1.5">
                      <span class={[
                        "inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium",
                        get_hearing_status_class(instructor.hearing_status)
                      ]}>
                        <%= format_hearing_status(instructor.hearing_status) %>
                      </span>  
                    </div>
                  </:col>
                  
                  <:col :let={instructor} label="Created" class="w-20">
                    <div class="text-xs text-gray-600 px-2 py-1.5">
                      <%= Calendar.strftime(instructor.inserted_at, "%b %d, %Y") %>
                    </div>
                  </:col>
                  
                  <:col :let={instructor} label="Actions" class="w-16">
                    <div class="px-2 py-1.5">
                      <.dropdown id={"dropdown-#{instructor.id}"} label="Options">
                        
                      <.link patch={~p"/admin/instructors/#{instructor.id}"} class="flex items-center px-3 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-colors duration-150">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                        View Details
                      </.link>

                      <.link patch={~p"/admin/instructors/#{instructor.id}/edit"} class="flex items-center px-3 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-colors duration-150">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                        Edit
                      </.link>

                      <.link class="flex items-center px-3 py-2 text-sm text-orange-600 hover:bg-orange-50 hover:text-orange-700 transition-colors duration-150" 
                        phx-click="reset_password"
                        phx-value-id={instructor.id}>
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                        </svg>
                        Reset Password
                      </.link>

                       <.link class="flex items-center px-3 py-2 text-sm text-red-600 hover:bg-red-50 hover:text-red-700 transition-colors duration-150" 
                          phx-click="delete"
                          phx-value-id={instructor.id}>
                          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                          </svg>
                          Delete
                        </.link>

                    </.dropdown>
                  </div>
                </:col>
                </.table>
              </div>
              
              <%= if Enum.empty?(@data) and not @data_loader do %>
                <div class="text-center py-8 text-gray-500">No data available in table</div>
              <% end %>
              
              <.live_component
                module={SigneaseWeb.Admin.Users.Components.PaginationComponent}
                id="PaginationComponent"
                params={@params}
                pagination_data={@pagination}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>



<!-- Instructor Details Modal -->
<.modal :if={@live_action == :show} id="instructor-show-modal" show on_cancel={JS.patch(~p"/admin/instructors")}>
  <.live_component
    module={SigneaseWeb.Admin.Users.Components.UserShowComponent}
    id={@user.id}
    title={@page_title}
    action={@live_action}
    user={@user}
    patch={~p"/admin/instructors"}
  />
</.modal>

<!-- Instructor Edit Modal -->
<%= if @live_action == :edit do %>
  <.live_component
    module={SigneaseWeb.Admin.Users.Components.InstructorFormComponent}
    id={@user.id}
    title={@page_title}
    action={@live_action}
    user={@user}
    patch={~p"/admin/instructors"}
  />
<% end %>

<!-- Instructor New Modal -->
<%= if @live_action == :new do %>
  <.live_component
    module={SigneaseWeb.Admin.Users.Components.InstructorFormComponent}
    id={:new}
    title={@page_title}
    action={@live_action}
    user={@user}
    patch={~p"/admin/instructors"}
  />
<% end %>

<!-- Filter Modal -->
<.modal :if={@live_action == :filter} id="filter-modal" show on_cancel={JS.patch(~p"/admin/instructors")}>
  <.live_component
    module={SigneaseWeb.Admin.Users.Components.FilterComponent}
    id={:filters}
    title={@page_title}
    action={@live_action}
    filter_params={@filter_params}
    user_type="instructors"
    patch={~p"/admin/instructors"}
  />
</.modal> 